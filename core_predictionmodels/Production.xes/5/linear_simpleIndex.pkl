ccopy_reg
_reconstructor
p1
(csklearn.linear_model.coordinate_descent
Lasso
p2
c__builtin__
object
p3
NtRp4
(dp5
S'normalize'
p6
I00
sS'warm_start'
p7
I01
sS'selection'
p8
S'cyclic'
p9
sS'fit_intercept'
p10
I01
sS'l1_ratio'
p11
F1
sS'max_iter'
p12
I1000
sS'n_iter_'
p13
I923
sS'intercept_'
p14
cnumpy.core.multiarray
scalar
p15
(cnumpy
dtype
p16
(S'f8'
I0
I1
tRp17
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xe3\x99\xb8\xea\xee\x9a8A'
tRp18
sS'precompute'
p19
I00
sS'random_state'
p20
NsS'_sklearn_version'
p21
S'0.18.1'
p22
sS'tol'
p23
F0.0001
sS'positive'
p24
I00
sS'copy_X'
p25
I01
sS'alpha'
p26
F1
sS'coef_'
p27
cnumpy.core.multiarray
_reconstruct
p28
(cnumpy
ndarray
p29
(I0
tS'b'
tRp30
(I1
(I5
tg17
I00
S'H^\xe2\xd1\xedW\xbe@\xafa\x96\x11\x1f9\x99\xc0\xc3@\xe7\x11\x94C\xca\xc0\xcfP\x87q7\xe7\xbb@0\xf8\x1e\xfb\xfd\x90\xa1@'
tbsS'dual_gap_'
p31
g28
(g29
(I0
tS'b'
tRp32
(I1
(tg17
I00
S"\x00\xa08\x05\xa0\xb4'B"
tbsb.